'use strict';

/**
 * @typedef {Object} CommandBase
 * @property {string} base the base command
 * @property {string[]} args the arguments of the command
 */

const Discord = require('discord.js');
const config = require('../config');

class CommandHandler {
    /**
     * Returns an object that contains the base command, the arguments, and parent (if exists) of the given input
     * @param {string[]|string} context the input
     * @returns {CommandBase} an object that contains the base command, the arguments, and parent (if exists) of the given input
     */
    static getArguments(context) {
        const obj = {};
        let arr;
        if (typeof context === 'string')
            arr = context.substring(config.prefix.length).split(/\s+/g);
        else
            arr = context.slice(); // to avoid changing the original array
        obj.base = arr.shift();
        obj.args = arr;
        return obj;
    }

    /**
     * Returns true if the command runs, false otherwise
     * @param {Discord.Message} msg the Message generated by the user
     * @param {CommandBase} obj the command
     * @param {Map<string, object>} commands the list of commands
     * @returns {boolean} true if the command runs, false otherwise
     */
    static handle(msg, obj, commands = config.commands) {
        if (!commands.has(obj.base)) {
            msg.channel.send(`Command not found.`);
            return false;
        }
        if (!commands.get(obj.base).useable) {
            msg.channel.send(`That command is not useable right now.`);
            return false;
        }
        const command = commands.get(obj.base);
        if (!command.pass(msg, obj))
            return false;
        command.run(msg, obj);
        return true;
    }
}

module.exports = CommandHandler;